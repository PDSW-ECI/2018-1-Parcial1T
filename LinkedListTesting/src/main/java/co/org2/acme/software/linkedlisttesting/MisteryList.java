/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.org2.acme.software.linkedlisttesting;

import java.util.Iterator;

/**
 *
 * @author hcadavid
 */
class Node
{
    public int item;
    public Node next;
    public Node(int val)
    {
        item = val;
    }
    public void displayNode()
    {
        System.out.println("[" + item + "] ");
    }
} 
public class MisteryList
{
    private Node first;
    public MisteryList()
    {
        first = null;
    }
    public boolean isEmpty()
    {
        return (first==null);
    }
    public void headInsert(int val)//inserts at beginning of list
    {
        Node newNode = new Node(val);
        newNode.next = first;
        first = newNode;
    }
    public Node delete()//deletes at beginning of list
    {
        Node temp = first;
        first = first.next;
        return temp;
    }
    public void display()
    {        
        Node current = first;
        while(current != null)
        {
            current.displayNode();
            current = current.next; 
        }
        System.out.println("");
    }

    public Iterator<Integer> elements()
    {        
        return new Iterator<Integer>() {
            
            Node current = first;
            
            @Override
            public boolean hasNext() {
                return current != null;
            }

            @Override
            public Integer next() {
                int res=current.item;
                current = current.next; 
                return res;
            }
        };
        
    }




    public void reverse() 
    {
        Node current = first;
            first = null;
            while (current != null) 
            {
                    Node save = current;
                current = current.next;
                save.next = first;
                first = save;
        }
    }
    
    public Node search(int val)
    {
        Node current = first;
        while(current.item != val)
        {
            if(current.next == null)
                return null;
            else
                current = current.next;
        }
        return current;
    }
    
    public Node delete(int val)
    {
        Node current = first;
        Node previous = first;
        while(current.item != val)
        {
            if(current.next == null)
                return null;
            else
            {
                previous = current;
                current = current.next;
            }
        }
        if(current == first)
            first = first.next;
        else
            previous.next = current.next;
        return current;
    }
    
    /**
     * @obj Remueve los elementos duplicados de la lista
     * @pre True
     * @pos Para cada elemento E de la lista que este 2 o mas veces,
     * la lista deja solo un elemento del mismo. Si los elementos
     * repetidos no son contiguos (por ejemplo, el tercer, quinto y decimo
     * elemento), la posicion donde se dejara el valor sera siempre
     * la del elemento que estaba mas cerca de la cabeza de la lista
     */
    public void deleteDup()
    {
    /* TODO: fix this stuff \u002a\u002f\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u002f\u002f\u0069\u0066\u0028\u0066\u0069\u0072\u0073\u0074\u0020\u003d\u003d\u0020\u006e\u0075\u006c\u006c\u0029\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u002f\u002f\u0020\u0020\u0020\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u003b\u000a\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0049\u0074\u0065\u0072\u0061\u0074\u006f\u0072\u003c\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u003e\u0020\u0065\u006c\u0065\u006d\u0073\u0020\u003d\u0020\u0074\u0068\u0069\u0073\u002e\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0028\u0029\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u006e\u0074\u0020\u0066\u0069\u0072\u0073\u0074\u0076\u0020\u003d\u0020\u0065\u006c\u0065\u006d\u0073\u002e\u006e\u0065\u0078\u0074\u0028\u0029\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0062\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0061\u006c\u006c\u0074\u0068\u0065\u0073\u0061\u006d\u0065\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u0066\u0020\u0028\u0021\u0065\u006c\u0065\u006d\u0073\u002e\u0068\u0061\u0073\u004e\u0065\u0078\u0074\u0028\u0029\u0029\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0061\u006c\u006c\u0074\u0068\u0065\u0073\u0061\u006d\u0065\u003d\u0066\u0061\u006c\u0073\u0065\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0028\u0065\u006c\u0065\u006d\u0073\u002e\u0068\u0061\u0073\u004e\u0065\u0078\u0074\u0028\u0029\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u0066\u0020\u0028\u0066\u0069\u0072\u0073\u0074\u0076\u0020\u0021\u003d\u0020\u0065\u006c\u0065\u006d\u0073\u002e\u006e\u0065\u0078\u0074\u0028\u0029\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0061\u006c\u006c\u0074\u0068\u0065\u0073\u0061\u006d\u0065\u0020\u003d\u0020\u0066\u0061\u006c\u0073\u0065\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u0066\u0020\u0028\u0061\u006c\u006c\u0074\u0068\u0065\u0073\u0061\u006d\u0065\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0066\u0069\u0072\u0073\u0074\u003d\u006e\u0075\u006c\u006c\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u0020\u0065\u006c\u0073\u0065\u0020\u007b\u000a\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u004e\u006f\u0064\u0065\u0020\u0070\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0020\u003d\u0020\u0066\u0069\u0072\u0073\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u004e\u006f\u0064\u0065\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u003d\u0020\u0070\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u002e\u006e\u0065\u0078\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0028\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u0021\u003d\u0020\u006e\u0075\u006c\u006c\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u004e\u006f\u0064\u0065\u0020\u0072\u0075\u006e\u006e\u0065\u0072\u0020\u003d\u0020\u0066\u0069\u0072\u0073\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0028\u0072\u0075\u006e\u006e\u0065\u0072\u0020\u0021\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u0066\u0020\u0028\u0072\u0075\u006e\u006e\u0065\u0072\u002e\u0069\u0074\u0065\u006d\u0020\u003d\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u002e\u0069\u0074\u0065\u006d\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u004e\u006f\u0064\u0065\u0020\u0074\u0065\u006d\u0070\u0020\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u002e\u006e\u0065\u0078\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0070\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u002e\u006e\u0065\u0078\u0074\u0020\u003d\u0020\u0074\u0065\u006d\u0070\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u003d\u0020\u0074\u0065\u006d\u0070\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0062\u0072\u0065\u0061\u006b\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0072\u0075\u006e\u006e\u0065\u0072\u0020\u003d\u0020\u0072\u0075\u006e\u006e\u0065\u0072\u002e\u006e\u0065\u0078\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0069\u0066\u0020\u0028\u0072\u0075\u006e\u006e\u0065\u0072\u0020\u003d\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0029\u0020\u007b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0070\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0020\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u003d\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u002e\u006e\u0065\u0078\u0074\u003b\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u007d\u000a\u002f\u002a */               
}
 
@Override
public String toString() {
    StringBuffer r = new StringBuffer("[");
    for(int x : (Iterable<Integer>)() -> this.elements()) {
        r.append(" "+x);
    }
    r.append("]");
    return r.toString();
}
} 
